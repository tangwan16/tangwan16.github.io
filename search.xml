<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo+Butterfly</title>
      <link href="/2024/03/23/Hexo+Butterfly/"/>
      <url>/2024/03/23/Hexo+Butterfly/</url>
      
        <content type="html"><![CDATA[<p>#Hexo+Butterfly</p>]]></content>
      
      
      <categories>
          
          <category> Hexo+Butterfly教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo+Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pinia的部署与使用</title>
      <link href="/2024/03/23/pinia/"/>
      <url>/2024/03/23/pinia/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装pinia到项目中"><a href="#1-安装pinia到项目中" class="headerlink" title="1 安装pinia到项目中"></a>1 安装pinia到项目中</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia</span><br><span class="line">或 </span><br><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; createPinia &#125; from &#x27;pinia&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">const pinia = createPinia()</span><br><span class="line">const app = createApp(App)</span><br><span class="line">app.use(pinia).mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><h2 id="store的定义与使用"><a href="#store的定义与使用" class="headerlink" title="store的定义与使用"></a>store的定义与使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">store/counter.js</span><br><span class="line">defineStore(仓库的唯一标识，()=&gt;&#123;&#125;)</span><br><span class="line"></span><br><span class="line">export const userCounterStore =defineStore(&#x27;counter&#x27;,()=&gt;&#123;</span><br><span class="line">//声明数据state使用ref()</span><br><span class="line">const count =ref(100)</span><br><span class="line">//声明操作数据的方法（普通函数）</span><br><span class="line">const addCount =()=&gt;count.value++</span><br><span class="line">const subCount =()=&gt;count.value--</span><br><span class="line">//声明基于数据派生的计算属性getters使用computed</span><br><span class="line">const doubleCount =computed(()=&gt;count.value*2)</span><br><span class="line">return &#123;</span><br><span class="line">count,</span><br><span class="line">addCount,</span><br><span class="line">subCount,</span><br><span class="line">doubleCount</span><br><span class="line">&#125;</span><br><span class="line">//异步请求</span><br><span class="line">const channels = ref([])</span><br><span class="line">const getList = async ()=&gt;&#123;</span><br><span class="line">const data = await axios.get(&#x27;http://geek.itheima.net/v1_0/channels&#x27;)</span><br><span class="line">channels.value =data.data.data.channels</span><br><span class="line">console.log(channels.value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="数据的解构同时保持数据-storeToRefs"><a href="#数据的解构同时保持数据-storeToRefs" class="headerlink" title="数据的解构同时保持数据 storeToRefs"></a>数据的解构同时保持数据 storeToRefs</h2><p>&#x2F;&#x2F;响应式丢失，视图不再更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//响应式丢失，视图不再更新</span><br><span class="line">const &#123;count,doubleCount &#125; = counterStore</span><br><span class="line">//保持数据响应式</span><br><span class="line">const &#123;count,doubleCount &#125; =storeToRefs(counterStore)</span><br><span class="line">//函数结构不需要的使用storeToRefs</span><br></pre></td></tr></table></figure><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><p>官方文档：<a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/">https://prazdevs.github.io/pinia-plugin-persistedstate/zh/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia-plugin-persistedstate</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createPinia &#125; from &#x27;pinia&#x27;</span><br><span class="line">import piniaPluginPersistedstate from &#x27;pinia-plugin-persistedstate&#x27;</span><br><span class="line"></span><br><span class="line">const pinia = createPinia()</span><br><span class="line">pinia.use(piniaPluginPersistedstate)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export const useCounterStore = defineStore(&#x27;counter&#x27;, () =&gt; &#123;</span><br><span class="line">  ...</span><br><span class="line">  return &#123;</span><br><span class="line">    count,</span><br><span class="line">    doubleCount,</span><br><span class="line">    increment</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  persist: true</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">persist: &#123;</span><br><span class="line">  key: &#x27;my-custom-key&#x27;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export const useStore = defineStore(&#x27;store&#x27;, &#123;</span><br><span class="line">  state: () =&gt; (&#123;</span><br><span class="line">    save: &#123;</span><br><span class="line">      me: &#x27;saved&#x27;,</span><br><span class="line">      notMe: &#x27;not-saved&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    saveMeToo: &#x27;saved&#x27;,</span><br><span class="line">  &#125;),</span><br><span class="line">  persist: &#123;</span><br><span class="line">    paths: [&#x27;save.me&#x27;, &#x27;saveMeToo&#x27;],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pinia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>需要更加努力</title>
      <link href="/2024/03/23/%E5%B8%8C%E6%9C%9B%E4%BF%9D%E5%88%B0%E4%B8%AA%E5%A5%BD%E5%AD%A6%E6%A0%A1/"/>
      <url>/2024/03/23/%E5%B8%8C%E6%9C%9B%E4%BF%9D%E5%88%B0%E4%B8%AA%E5%A5%BD%E5%AD%A6%E6%A0%A1/</url>
      
        <content type="html"><![CDATA[<p>#需要更加努力</p>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3</title>
      <link href="/2024/03/19/vue3/"/>
      <url>/2024/03/19/vue3/</url>
      
        <content type="html"><![CDATA[<p>#vue3</p>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot</title>
      <link href="/2024/03/19/springboot/"/>
      <url>/2024/03/19/springboot/</url>
      
        <content type="html"><![CDATA[<p>#springboot</p>]]></content>
      
      
      <categories>
          
          <category> 后端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桑榆非晚</title>
      <link href="/2024/03/12/%E6%A1%91%E6%A6%86%E9%9D%9E%E6%99%9A/"/>
      <url>/2024/03/12/%E6%A1%91%E6%A6%86%E9%9D%9E%E6%99%9A/</url>
      
        <content type="html"><![CDATA[<p>#莫道桑榆晚，为霞尚满天</p>]]></content>
      
      
      <categories>
          
          <category> 生活趣闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.css"/>
      <url>/css/runtime.css</url>
      
        <content type="html"><![CDATA[/*电子钟字体*/@font-face {    font-family: 'UnidreamLED';    src: url("https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf");    font-display: swap;  }  div#runtime {    width: 180px;    margin: auto;    color: #fff;    padding-inline: 5px;    border-radius: 10px;    background-color: rgba(0,0,0,0.7);    font-family: 'UnidreamLED';  }  [data-theme="dark"] div#runtime {    color: #a9e1ea;    box-shadow: 0 0 5px rgba(28,69,218,0.71);    animation: flashlight 1s linear infinite alternate;  }  [data-theme=dark] a.github-badge:hover:before {    background-color: rgba(18,18,18,0.8);  }  @-moz-keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }  @-webkit-keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }  @-o-keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }  @keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  #ft {    max-width: 1200px;    margin: 0 auto 12px;    display: flex;    color: rgb(255 255 255 / 80%) !important;    text-align: left;    flex-wrap: wrap;  }    .ft-item-1,  .ft-item-2 {    display: flex;    height: 100%;    padding: 2px 14px;  }    .ft-item-1 {    flex-direction: column;    flex: 2;  }    .ft-item-2 {    flex: 1;    flex-direction: column;  }    .t-top {    display: flex;  }    .t-top .t-t-l {    display: flex;    flex-direction: column;    flex: 1.4;    margin-right: 10px;  }    .t-top .t-t-l .bg-ad {    width: 85%;    border-radius: 10px;    padding: 0 10px;  }    .btn-xz-box {    margin-top: 10px;  }    .btn-xz {    display: block;    background-color: var(--btn-bg);    color: var(--btn-color);    text-align: center;    line-height: 2.4;    margin: 8px 0;  }    .btn-xz:hover {    text-decoration: none !important;  }    .btn-xz-box:hover .btn-xz {    background-color: var(--text-bg-hover) !important;  }    .t-top .t-t-r {    display: flex;    flex-direction: column;    flex: 1;  }    .ft-links {    padding: 0 14px;    list-style: none;    margin-top: 0 !important;  }    .ft-links li a {    display: inline-block !important;    width: 50%;  }    .ft-links li a:hover {    text-decoration: none !important;    color: var(--theme-color) !important;  }    .ft-item-2 .ft-img-group {    width: 100%;  }    .ft-t {    font-size: 1.1rem;    margin-bottom: 20px;    line-height: 1;    font-weight: 600;  }    .t-l-t {    padding-left: 14px;  }    .ft-item-2 .ft-img-group .img-group-item {    display: inline-block;    width: 18.4%;    margin-right: 14px;    margin-bottom: 6px;  }    .ft-item-2 .ft-img-group .img-group-item a {    display: inline-block;    width: 100%;    height: 100%;  }    .ft-item-2 .ft-img-group .img-group-item a img {    width: 100%;    max-height: 80px;    border-radius: 10px;  }    .ft-item-2 .ft-img-group .img-group-item a img:hover {    scale: 1.1;    transition: all 0.3s ease-in-out;  }    @media screen and (max-width: 768px) {    .ft-item-1 {      flex-basis: 100% !important;    }      .ft-item-2 {      flex-basis: 100% !important;    }      .t-top .t-t-l .bg-ad {      width: 100%;    }  }    @media screen and (max-width: 576px) {    .t-top {      flex-wrap: wrap;    }      .t-top .t-t-l {      flex-basis: 100% !important;    }      .t-top .t-t-r {      margin-top: 16px;      flex-basis: 100% !important;    }  }  #footer-wrap a {    border-radius: 30px;  }  #footer-wrap {    padding: 20px 20px;  }  /* 自定义底部  End */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[setInterval(() => {    let create_time = Math.round(new Date('2024-03-10 00:00:00').getTime() / 1000); //在此行修改建站时间    let timestamp = Math.round((new Date().getTime()) / 1000);    let second = timestamp - create_time;    let time = new Array(0, 0, 0, 0, 0);      var nol = function(h){      return h>9?h:'0'+h;    }    if (second >= 24 * 3600) {      time[1] = parseInt(second / (24 * 3600));      second %= 24 * 3600;    }    if (second >= 3600) {      time[2] = nol(parseInt(second / 3600));      second %= 3600;    }    if (second >= 60) {      time[3] = nol(parseInt(second / 60));      second %= 60;    }    if (second > 0) {      time[4] = nol(second);    }      currentTimeHtml =`<img class='boardsign' src= 'https://img.shields.io/badge/不晚-科研摸鱼中-6adea8?style=social&logo=data%3Aimage%2Fjpeg%3Bbase64%2CUklGRjQKAABXRUJQVlA4TCgKAAAvP8APEBWHgrZtJIc%2F7O0eCBExAVC1QCNKhdNvStr%2BKZKUf9kY7u6uESnt3l0RiVfhbqOX4PQZmsUF%2Fjt8LHAI9ATOzt0drmB7d2fP3kmWdYJc4bLjJDyxHp5Hbm1tjqRsMpsFYkQEJICPpTV4uNJbrbXe7VL%2FV%2F%2F3118FgQHJtt22TRuFkmwTHyQApncXEUjZ%2F3Yydpk650iWZNu0Ldu2bePZVuv%2BwLPt1ovXtW39gL157Xts2%2Bds4y4IbttIkmRojj3dNV2FvEGOA0COpHzJYTJvzlu8h%2B497%2F1Ndw%2F7dqar1s0H5gd4opqIJ%2FCRC%2FkEXyBskc8%2FEHFpc0IXr0hbIiwROcmBALBl9OKz2SzJrLNt276fOYwkt20FcYR%2FEASYSUcnAgCoSSORl3BI1smkfQD9BNF5g0PlI%2FMNm%2BDu7u5%2BDtxGUqTMeuFw8RPtlXNCe%2BUcj6b0X3utt10KVzyooKwOSdL2oRSuw8GPUkQsZxy5nIMZy%2FpKwOS5wrszAXAIYDJIdJ7hmQuAFQAG%2BNryqCZHeHfFIwDz5xw9ycCMz%2Bk9yQ0y4UdeEFNELDcs5nKWmBHEFAG%2BWjZ5TpBN%2FMTnRCJKEbGOo1Y7Dxy3ZwczZeSwzUWNeK6ICC4OKsjIhM5y1M7evSbdHLQboK5zyeBi7LMJT4SBCC4y4eJM8lzggL1333XOUVfDwOmqja1NNZ8IA8HF8HWoMyFNCFXvfsM56gooFRA1b%2FshvxMq0J5hyaHb3uZ6ux1gt5a5VBX0pxOjuRo2XSU9b7eB7NZS2J%2FIBamCjvm6E56320B2ayl8ccBEEbRcXvWm5%2B02kN1aCp%2BImogccOhwhPnF%2B%2FmVArvPy24thc5NocI6VguGA5Xdx223lpIucTNysKDiUL6TqzUCQtFztw5J5AhBR4jWIYnh7kQqjNC5uVpGFOKOwhR0UMm0zLsfP3%2B1drdYFpjIEViXShDYnUETqZNI3HSZECcRe1OL2QfCEQ9ZIlGHBL0n%2BtLa3fJIEjNRNMDejo9aUWdOCJWQv03RCoBlx0konHK0QAWWTemILSJKQczwbjETmW1WlvshGD8VxZvB73cCo73RHJCHEPkAtTl0vHdo7LRmuuWvLEdqSFGmRBRN%2FLGBB8hMhtkALwYBF4Wcv10GLZImVg4yVpwAB5PLMYPk7qAxuhWgKCyLyRFPHidxsTd2xt7UsmR7HJaz4dDLvvjVkToKkZOfD4%2BmuIlvJgJZtYwc3e4dMr1dbAjFn68Abyg58CAf9od5ty3eGodF1SXbY3POku20a%2FHOIH4uRbUC6GrZ9TyiFOXvCC6RoduZ9f3%2FJ4l8A5XIyGUfVTvmITiC0xF%2FkBXyrpXLTtUcHEld31%2B8k3YgDqndP%2FZ0AS%2FZToRkVW2rKgBENHQ7S5EL95ujbkuyfWTodv73e5ENQbVjSRAnQB55ZN0%2FiKTbaZe4eo86W0KLdwa%2FsFrIG43QxGGyIjKpFZLtQ3Jz0vAQwlwjcgivm8YAS7ZT%2BJizPJaa%2BtyjiMOX98nUTelcYhI5%2FDLDZ24MrixV870lvgh2czLwLA4WhpuMS74IXV71zIes1WLBEQP81BplF0I4c3fyHHW6gJOmQee%2BvQkRY69DpJuQX2GkQk6OBvmwHqfqaNdUDrVYdVZEAheiB6GL0vYFJverqFvxCFnbdmYhNixcCA87dTe5WAQdjXLO%2FURHW44iZNhN6QoTqO%2Bo0xW8eGdkVqzfYAoHmq6yKs8SAmkVhdh%2Fvsn9qqp2PQWfZSyhuOUopVt%2BvTyexNsXIqS3Gyix19%2BnRKImk67QDalaT94f8Py2QB%2Fseu95JGIIZe4JJ5jazaJu%2BRn4j6QozxuDhhx%2FftYvwPj2JmUHxzd1Na0iyjs9bhI59jz%2FOev7tVZm4rBz3VKEAeSoVVxwebUY3fJ7AOlmZaEDTQszq5l%2BDVFX8WXNuUtF7ggHmupmapngQCRkUphzHPHjuzEZeAmf9DAHxmM389hpjx%2Ff7ui%2BXHYL4bPE1Z1hy4h8%2FH3s9637vtadu%2FEnSiNuskvHWNFrg5TLq1mzzAFRnC86h4QQdCsAVm3qmcvaNXJm7LR2AsbFx%2B2eeryI2GuAuqpu0p27LHMvE%2F78ZVAzcjmXPYPpyHvMZQOhgSoBLNkKeapWzUiD8eV%2FHNyrnLuHfBhz2R2OcMF00Kerqk4b4IcvHc8SCw2oallwInFyeTnrzfaPRczym3z0gfx57gcVsQRrZapTljf6jbNCruPrzTbYF6yqlQt7iGyPH9a6%2Bf55FmGd%2B4MifC07XPRY6P3RpyvJMZfLP0FF9avFa%2BnHwSkTNv18Flcd2EcOPphJDpjqsASRRZjaE03OCKARM4iDPSqqp26OcyPg6Rkw1BZMcMDEAdEkjxRgwgdRhGOZw4F7HCwo8ALXHHhmOjE6lgs2KFUSqRLiJkpdVRzsV1A8fSNJEwrh8kRN2LSpdqTp6BQYntUyyiprH5O9hAV8bIdagEoy4R4OoHe2BRO3j7HgA00UdBglb1Xp1B9klSp3guzpG4MmZQk4XS69YEwZnwmAb%2FyZBWD8hAZQmwN720WGmZxzqlKGrU4%2FJiF55kYKDlUxOk3kfoRmix5k7%2BjqOQENSSZLIb1dI73RBp27Xlpf4ZkbSZx94EmjRI0jYg9Gvw15NvNHVLmOVv1i0JHe6JlasRAqL%2Bic0k%2Fqxpik0C%2FJITXbji%2FxTdlCq8pUiZtrX7%2Bd3MGf4Q1ss1in0w1zoi3FUHnBKTujpGZdqLHzC7nVbu1v6F79Dj%2FQTatKVNU01D0Fpp%2Fx5%2F8plHqKjBZ0pDf%2BgNHku7UnZKv2hrfczWABpGxc13IeiRMs3k7EJmVtKKW0ODs38c%2FJndoLvF%2B%2FnSHDKNoNUFeCiF1PXuf0YsPTtv2te4O2ltRaMKUaYIAaHBwQ75Ccp9Pre6TU5aUNbC3Z8fqpv%2BjsBfRHpdaaOKiLi7MTS3kEePqk%2FdUCMJZKfZd6mh8XFMZvMTBova%2B%2FvnFeq7kQt2Q7sZuWjdbg6zVxdr3tdV0hEcwfmvT%2Fx%2FUWap8WyOTrr9fT%2FKSQ4L0MLBijZZNd0tSYMeqBwYDsyguIX5oFcy99dXN%2B8MX1MaC7zV2A8bjA3Hn9JcaKwFCBRWt3vn%2FdmR9egfVGoBtNXcq3L7CfO8H8gUmwYMH8Dky%2FKfD%2FIro729uOWJ7s%2F8K%2Fng3mb%2B%2FWW5ZvWs%2BdwCi9RC%2FQSbB4CR5ViEcs993d%2BQGs7Mz2XYigvR3M34A5qbW8A%2FS3wnbuBPZTOmulU%2FU8%2FwbGQdDfTETEzvxwdeXK7vxwBRGxWd7SG9O8r57m3zXppGpZAuOM7dy5CsxtZQmMCDAcoK6pFUfraX7ZmHYX511tN23%2FcpWOcjqLI7ZyZXe2R5WKuz2jtNb1Zh3QLwPjFVig64Dhz9fmBeDcUXju1HXpzI%2BRlSuvkrvY9yso3rVy5XMFxaJ1jn30l9%2Bd7W9054ebv58N9rYLAg%3D%3D' title='距离百年老店也就差不到一百年~'> \      <div style ='font-size: 13px; font-weight: bold'> \      本站居然运行了${time[1]}天${time[2]}小时${time[3]}分${time[4]}秒  \        <i id="heartbeat" class='fas fa-heartbeat' style='color:red'> </i> \      </div>`;     document.getElementById("workboard").innerHTML = currentTimeHtml;  }, 1000);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>movies</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
