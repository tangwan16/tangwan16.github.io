<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>朴素贝叶斯</title>
      <link href="/2024/04/08/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/"/>
      <url>/2024/04/08/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="1-贝叶斯方法"><a href="#1-贝叶斯方法" class="headerlink" title="1 贝叶斯方法"></a>1 贝叶斯方法</h2><h3 id="1-1背景知识"><a href="#1-1背景知识" class="headerlink" title="1.1背景知识"></a>1.1背景知识</h3><h4 id="了解贝叶斯决策论"><a href="#了解贝叶斯决策论" class="headerlink" title="了解贝叶斯决策论"></a>了解贝叶斯决策论</h4><p>贝叶斯决策论更多地从观察者的角度出发, 事件的随机性是由观察者掌握的信息不够充分造成的, 观察者所掌握的信息充分程度将影响观察者对于事件的认知<br>贝叶斯决策理论的核心思想是 ：选择具有最高发生概率的事件作为最优决策，新的数据点被归类到了概率较高的那一个类别</p><h4 id="贝叶斯分类：以贝叶斯定理为基础的分类算法"><a href="#贝叶斯分类：以贝叶斯定理为基础的分类算法" class="headerlink" title="贝叶斯分类：以贝叶斯定理为基础的分类算法"></a>贝叶斯分类：以贝叶斯定理为基础的分类算法</h4><h4 id="先验概率：𝑃-𝑌"><a href="#先验概率：𝑃-𝑌" class="headerlink" title="先验概率：𝑃(𝑌)"></a>先验概率：𝑃(𝑌)</h4><p>根据以往经验和分析得到的概率。我们用𝑃(𝑌)来代表在没有训练数据前假设𝑌拥有的初始概率 </p><h4 id="后验概率：𝑃-𝑌-𝑋"><a href="#后验概率：𝑃-𝑌-𝑋" class="headerlink" title="后验概率：𝑃(𝑌|𝑋)"></a>后验概率：𝑃(𝑌|𝑋)</h4><p>根据已经发生的事件来分析得到的概率。反映了在看到训练数据𝑋后𝑌成立的置信度<br>联合概率：𝑋与𝑌的联合概率表示为𝑃(𝑋,𝑌) 、𝑃(𝑋𝑌) 或𝑃(𝑋 ∩ 𝑌)<br> 假设𝑋和𝑌都服从正态分布，那么𝑃(𝑋 &lt; 5, 𝑌 &lt; 0)就是一个联合概率，表示 𝑋 &lt; 5, 𝑌 &lt; 0两个条件同时成立的概率。表示两个事件共同发生的概率。 </p><h3 id="1-2贝叶斯公式"><a href="#1-2贝叶斯公式" class="headerlink" title="1.2贝叶斯公式"></a>1.2贝叶斯公式</h3><p><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/贝叶斯公式.png" alt="image.png"></p><h2 id="2-朴素贝叶斯原理"><a href="#2-朴素贝叶斯原理" class="headerlink" title="2 朴素贝叶斯原理"></a>2 朴素贝叶斯原理</h2><h3 id="2-1-判别模型和生成模型"><a href="#2-1-判别模型和生成模型" class="headerlink" title="2.1 判别模型和生成模型"></a>2.1 判别模型和生成模型</h3><p>监督学习方法又分：生成方法（Generative approach）和判别方法（Discriminative approach）<br>所学到的模型分别称为：生成模型（Generative Model）和判别模型（Discriminative Model)<br> <img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/判别模型与生成模型.png" alt="image.png"></p><h3 id="2-2基本原理"><a href="#2-2基本原理" class="headerlink" title="2.2基本原理"></a>2.2基本原理</h3><p>  朴素贝叶斯法是典型的生成学习方法<br>:::info<br> 朴素贝叶斯方法在传统的贝叶斯方法上作出基本假设:条件独立性<br>:::<br>条件独立性假设：<br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/条件独立性.png" alt="image.png"><br> 优点：高效、且易于实现，缺点：对于属性特征之间作出相互独立的假设，导致分类性能不一定很高<br>:::info<br> 朴素贝叶斯法利用贝叶斯定理与学到的联合概率模型进行分类预测<br>:::<br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/后验概率最大.png" alt="image.png"><br>贝叶斯公式：<br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/贝叶斯公式2.2.png" alt="image.png"><br>根据全概率公式，以下公式对于所有贝叶斯定理都成立，包括朴素贝叶斯<br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/贝叶斯公式2.2_2.png" alt="image.png"><br>根据条件独立假设：以下公式只对朴素贝叶斯成立<br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/2.2_3.png" alt="image.png"></p><h2 id="3-朴素贝叶斯案例"><a href="#3-朴素贝叶斯案例" class="headerlink" title="3 朴素贝叶斯案例"></a>3 朴素贝叶斯案例</h2><p><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_1.png" alt="image.png"><br> <img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_2.png" alt="image.png"><br> <img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_3.png" alt="image.png"><br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_4.png" alt="image.png"><br>采用拉普拉斯平滑方法：为每个计数加1，因此它永远不会为零。为了平衡这一点，我们将可能单词的数量添加到除数中，因此计算结果永远不会大于1<br> <img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_5.png" alt="image.png"><br>拉普拉斯平滑方法：<br>是一种用于平滑分类数据的技术。引入拉普拉斯平滑法来解决零概率问题,通过应用此方法,先验概率和条件概率可以写为 ：<br><img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_6.png" alt="image.png"><br>加入拉普拉斯平滑之后，避免了出现概率为0的情况，又保证了每个值都在0到1的范围内，又保证了最终和为1的概率性质。<br> <img src="https://picmd.tangwan16.cn/posts/机器学习/朴素贝叶斯/3_7.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 朴素贝叶斯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Butterfly</title>
      <link href="/2024/03/23/Hexo+Butterfly/"/>
      <url>/2024/03/23/Hexo+Butterfly/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Butterfly"><a href="#Hexo-Butterfly" class="headerlink" title="Hexo+Butterfly"></a>Hexo+Butterfly</h1>]]></content>
      
      
      <categories>
          
          <category> 建站教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo+Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pinia的部署与使用</title>
      <link href="/2024/03/23/pinia/"/>
      <url>/2024/03/23/pinia/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装pinia到项目中"><a href="#1-安装pinia到项目中" class="headerlink" title="1 安装pinia到项目中"></a>1 安装pinia到项目中</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia</span><br><span class="line">或 </span><br><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; createPinia &#125; from &#x27;pinia&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">const pinia = createPinia()</span><br><span class="line">const app = createApp(App)</span><br><span class="line">app.use(pinia).mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><h2 id="store的定义与使用"><a href="#store的定义与使用" class="headerlink" title="store的定义与使用"></a>store的定义与使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">store/counter.js</span><br><span class="line">defineStore(仓库的唯一标识，()=&gt;&#123;&#125;)</span><br><span class="line"></span><br><span class="line">export const userCounterStore =defineStore(&#x27;counter&#x27;,()=&gt;&#123;</span><br><span class="line">//声明数据state使用ref()</span><br><span class="line">const count =ref(100)</span><br><span class="line">//声明操作数据的方法（普通函数）</span><br><span class="line">const addCount =()=&gt;count.value++</span><br><span class="line">const subCount =()=&gt;count.value--</span><br><span class="line">//声明基于数据派生的计算属性getters使用computed</span><br><span class="line">const doubleCount =computed(()=&gt;count.value*2)</span><br><span class="line">return &#123;</span><br><span class="line">count,</span><br><span class="line">addCount,</span><br><span class="line">subCount,</span><br><span class="line">doubleCount</span><br><span class="line">&#125;</span><br><span class="line">//异步请求</span><br><span class="line">const channels = ref([])</span><br><span class="line">const getList = async ()=&gt;&#123;</span><br><span class="line">const data = await axios.get(&#x27;http://geek.itheima.net/v1_0/channels&#x27;)</span><br><span class="line">channels.value =data.data.data.channels</span><br><span class="line">console.log(channels.value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="数据的解构同时保持数据-storeToRefs"><a href="#数据的解构同时保持数据-storeToRefs" class="headerlink" title="数据的解构同时保持数据 storeToRefs"></a>数据的解构同时保持数据 storeToRefs</h2><p>//响应式丢失，视图不再更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//响应式丢失，视图不再更新</span><br><span class="line">const &#123;count,doubleCount &#125; = counterStore</span><br><span class="line">//保持数据响应式</span><br><span class="line">const &#123;count,doubleCount &#125; =storeToRefs(counterStore)</span><br><span class="line">//函数结构不需要的使用storeToRefs</span><br></pre></td></tr></table></figure><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><p>官方文档：<a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/">https://prazdevs.github.io/pinia-plugin-persistedstate/zh/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add pinia-plugin-persistedstate</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import &#123; createPinia &#125; from &#x27;pinia&#x27;</span><br><span class="line">import piniaPluginPersistedstate from &#x27;pinia-plugin-persistedstate&#x27;</span><br><span class="line"></span><br><span class="line">const pinia = createPinia()</span><br><span class="line">pinia.use(piniaPluginPersistedstate)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export const useCounterStore = defineStore(&#x27;counter&#x27;, () =&gt; &#123;</span><br><span class="line">  ...</span><br><span class="line">  return &#123;</span><br><span class="line">    count,</span><br><span class="line">    doubleCount,</span><br><span class="line">    increment</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  persist: true</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">persist: &#123;</span><br><span class="line">  key: &#x27;my-custom-key&#x27;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export const useStore = defineStore(&#x27;store&#x27;, &#123;</span><br><span class="line">  state: () =&gt; (&#123;</span><br><span class="line">    save: &#123;</span><br><span class="line">      me: &#x27;saved&#x27;,</span><br><span class="line">      notMe: &#x27;not-saved&#x27;,</span><br><span class="line">    &#125;,</span><br><span class="line">    saveMeToo: &#x27;saved&#x27;,</span><br><span class="line">  &#125;),</span><br><span class="line">  persist: &#123;</span><br><span class="line">    paths: [&#x27;save.me&#x27;, &#x27;saveMeToo&#x27;],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pinia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>需要更加努力</title>
      <link href="/2024/03/23/%E5%B8%8C%E6%9C%9B%E4%BF%9D%E5%88%B0%E4%B8%AA%E5%A5%BD%E5%AD%A6%E6%A0%A1/"/>
      <url>/2024/03/23/%E5%B8%8C%E6%9C%9B%E4%BF%9D%E5%88%B0%E4%B8%AA%E5%A5%BD%E5%AD%A6%E6%A0%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="需要更加努力"><a href="#需要更加努力" class="headerlink" title="需要更加努力"></a>需要更加努力</h1>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot</title>
      <link href="/2024/03/19/springboot/"/>
      <url>/2024/03/19/springboot/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot"><a href="#springboot" class="headerlink" title="springboot"></a>springboot</h1>]]></content>
      
      
      <categories>
          
          <category> 后端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3</title>
      <link href="/2024/03/19/vue3/"/>
      <url>/2024/03/19/vue3/</url>
      
        <content type="html"><![CDATA[<h1 id="vue3"><a href="#vue3" class="headerlink" title="vue3"></a>vue3</h1>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么逻辑回归不用MSE而用交叉熵</title>
      <link href="/2024/03/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E4%B8%8D%E7%94%A8MSE%E8%80%8C%E7%94%A8%E4%BA%A4%E5%8F%89%E7%86%B5/"/>
      <url>/2024/03/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E4%B8%8D%E7%94%A8MSE%E8%80%8C%E7%94%A8%E4%BA%A4%E5%8F%89%E7%86%B5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桑榆非晚</title>
      <link href="/2024/03/12/%E6%A1%91%E6%A6%86%E9%9D%9E%E6%99%9A/"/>
      <url>/2024/03/12/%E6%A1%91%E6%A6%86%E9%9D%9E%E6%99%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="莫道桑榆晚，为霞尚满天"><a href="#莫道桑榆晚，为霞尚满天" class="headerlink" title="莫道桑榆晚，为霞尚满天"></a>莫道桑榆晚，为霞尚满天</h1>]]></content>
      
      
      <categories>
          
          <category> 生活趣闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美赛</title>
      <link href="/2024/03/12/%E7%BE%8E%E8%B5%9B/"/>
      <url>/2024/03/12/%E7%BE%8E%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalendar容器 --><div id="gitZone"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.css"/>
      <url>/css/runtime.css</url>
      
        <content type="html"><![CDATA[/*电子钟字体*/@font-face {    font-family: 'UnidreamLED';    src: url("https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf");    font-display: swap;  }  div#runtime {    width: 180px;    margin: auto;    color: #fff;    padding-inline: 5px;    border-radius: 10px;    background-color: rgba(0,0,0,0.7);    font-family: 'UnidreamLED';  }  [data-theme="dark"] div#runtime {    color: #a9e1ea;    box-shadow: 0 0 5px rgba(28,69,218,0.71);    animation: flashlight 1s linear infinite alternate;  }  [data-theme=dark] a.github-badge:hover:before {    background-color: rgba(18,18,18,0.8);  }  @-moz-keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }  @-webkit-keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }  @-o-keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }  @keyframes flashlight {    from {      box-shadow: 0 0 5px #1478d2;    }    to {      box-shadow: 0 0 2px #1478d2;    }  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  #ft {    max-width: 1200px;    margin: 0 auto 12px;    display: flex;    color: rgb(255 255 255 / 80%) !important;    text-align: left;    flex-wrap: wrap;  }    .ft-item-1,  .ft-item-2 {    display: flex;    height: 100%;    padding: 2px 14px;  }    .ft-item-1 {    flex-direction: column;    flex: 2;  }    .ft-item-2 {    flex: 1;    flex-direction: column;  }    .t-top {    display: flex;  }    .t-top .t-t-l {    display: flex;    flex-direction: column;    flex: 1.4;    margin-right: 10px;  }    .t-top .t-t-l .bg-ad {    width: 85%;    border-radius: 10px;    padding: 0 10px;  }    .btn-xz-box {    margin-top: 10px;  }    .btn-xz {    display: block;    background-color: var(--btn-bg);    color: var(--btn-color);    text-align: center;    line-height: 2.4;    margin: 8px 0;  }    .btn-xz:hover {    text-decoration: none !important;  }    .btn-xz-box:hover .btn-xz {    background-color: var(--text-bg-hover) !important;  }    .t-top .t-t-r {    display: flex;    flex-direction: column;    flex: 1;  }    .ft-links {    padding: 0 14px;    list-style: none;    margin-top: 0 !important;  }    .ft-links li a {    display: inline-block !important;    width: 50%;  }    .ft-links li a:hover {    text-decoration: none !important;    color: var(--theme-color) !important;  }    .ft-item-2 .ft-img-group {    width: 100%;  }    .ft-t {    font-size: 1.1rem;    margin-bottom: 20px;    line-height: 1;    font-weight: 600;  }    .t-l-t {    padding-left: 14px;  }    .ft-item-2 .ft-img-group .img-group-item {    display: inline-block;    width: 18.4%;    margin-right: 14px;    margin-bottom: 6px;  }    .ft-item-2 .ft-img-group .img-group-item a {    display: inline-block;    width: 100%;    height: 100%;  }    .ft-item-2 .ft-img-group .img-group-item a img {    width: 100%;    max-height: 80px;    border-radius: 10px;  }    .ft-item-2 .ft-img-group .img-group-item a img:hover {    scale: 1.1;    transition: all 0.3s ease-in-out;  }    @media screen and (max-width: 768px) {    .ft-item-1 {      flex-basis: 100% !important;    }      .ft-item-2 {      flex-basis: 100% !important;    }      .t-top .t-t-l .bg-ad {      width: 100%;    }  }    @media screen and (max-width: 576px) {    .t-top {      flex-wrap: wrap;    }      .t-top .t-t-l {      flex-basis: 100% !important;    }      .t-top .t-t-r {      margin-top: 16px;      flex-basis: 100% !important;    }  }  #footer-wrap a {    border-radius: 30px;  }  #footer-wrap {    padding: 20px 20px;  }  /* 自定义底部  End */  /* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}/* 自定义字体 */@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url(/font/YSHaoShenTi-2.ttf);  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 导航栏魔改 *//* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(6) .menus_item_child {  left: -75px;}/* 黑夜灯光 *//* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {  animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 鼠标样式 */#cursor {  position: fixed;  width: 16px;  height: 16px;  /* 这里改变跟随的底色 */  background: rgb(57, 197, 187);  border-radius: 8px;  opacity: 0.25;  z-index: 10086;  pointer-events: none;  transition: 0.2s ease-in-out;  transition-property: background, opacity, transform;}#cursor.hidden {  opacity: 0;}#cursor.hover {  opacity: 0.1;  transform: scale(2.5);  -webkit-transform: scale(2.5);  -moz-transform: scale(2.5);  -ms-transform: scale(2.5);  -o-transform: scale(2.5);}#cursor.active {  opacity: 0.5;  transform: scale(0.5);  -webkit-transform: scale(0.5);  -moz-transform: scale(0.5);  -ms-transform: scale(0.5);  -o-transform: scale(0.5);}/* 页面样式调节 */:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 阿里的iconfont */.iconfont {  font-family: "iconfont" !important;  /* 这里可以自定义图标大小 */  font-size: 3em;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}svg.icon {  width: 1.28em;  height: 1.28em;  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>movies</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML =  `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[setInterval(() => {    let create_time = Math.round(new Date('2024-03-10 00:00:00').getTime() / 1000); //在此行修改建站时间    let timestamp = Math.round((new Date().getTime()) / 1000);    let second = timestamp - create_time;    let time = new Array(0, 0, 0, 0, 0);      var nol = function(h){      return h>9?h:'0'+h;    }    if (second >= 24 * 3600) {      time[1] = parseInt(second / (24 * 3600));      second %= 24 * 3600;    }    if (second >= 3600) {      time[2] = nol(parseInt(second / 3600));      second %= 3600;    }    if (second >= 60) {      time[3] = nol(parseInt(second / 60));      second %= 60;    }    if (second > 0) {      time[4] = nol(second);    }      currentTimeHtml =`<img class='boardsign' src= 'https://img.shields.io/badge/不晚-科研摸鱼中-6adea8?style=social&logo=data%3Aimage%2Fjpeg%3Bbase64%2CUklGRjQKAABXRUJQVlA4TCgKAAAvP8APEBWHgrZtJIc%2F7O0eCBExAVC1QCNKhdNvStr%2BKZKUf9kY7u6uESnt3l0RiVfhbqOX4PQZmsUF%2Fjt8LHAI9ATOzt0drmB7d2fP3kmWdYJc4bLjJDyxHp5Hbm1tjqRsMpsFYkQEJICPpTV4uNJbrbXe7VL%2FV%2F%2F3118FgQHJtt22TRuFkmwTHyQApncXEUjZ%2F3Yydpk650iWZNu0Ldu2bePZVuv%2BwLPt1ovXtW39gL157Xts2%2Bds4y4IbttIkmRojj3dNV2FvEGOA0COpHzJYTJvzlu8h%2B497%2F1Ndw%2F7dqar1s0H5gd4opqIJ%2FCRC%2FkEXyBskc8%2FEHFpc0IXr0hbIiwROcmBALBl9OKz2SzJrLNt276fOYwkt20FcYR%2FEASYSUcnAgCoSSORl3BI1smkfQD9BNF5g0PlI%2FMNm%2BDu7u5%2BDtxGUqTMeuFw8RPtlXNCe%2BUcj6b0X3utt10KVzyooKwOSdL2oRSuw8GPUkQsZxy5nIMZy%2FpKwOS5wrszAXAIYDJIdJ7hmQuAFQAG%2BNryqCZHeHfFIwDz5xw9ycCMz%2Bk9yQ0y4UdeEFNELDcs5nKWmBHEFAG%2BWjZ5TpBN%2FMTnRCJKEbGOo1Y7Dxy3ZwczZeSwzUWNeK6ICC4OKsjIhM5y1M7evSbdHLQboK5zyeBi7LMJT4SBCC4y4eJM8lzggL1333XOUVfDwOmqja1NNZ8IA8HF8HWoMyFNCFXvfsM56gooFRA1b%2FshvxMq0J5hyaHb3uZ6ux1gt5a5VBX0pxOjuRo2XSU9b7eB7NZS2J%2FIBamCjvm6E56320B2ayl8ccBEEbRcXvWm5%2B02kN1aCp%2BImogccOhwhPnF%2B%2FmVArvPy24thc5NocI6VguGA5Xdx223lpIucTNysKDiUL6TqzUCQtFztw5J5AhBR4jWIYnh7kQqjNC5uVpGFOKOwhR0UMm0zLsfP3%2B1drdYFpjIEViXShDYnUETqZNI3HSZECcRe1OL2QfCEQ9ZIlGHBL0n%2BtLa3fJIEjNRNMDejo9aUWdOCJWQv03RCoBlx0konHK0QAWWTemILSJKQczwbjETmW1WlvshGD8VxZvB73cCo73RHJCHEPkAtTl0vHdo7LRmuuWvLEdqSFGmRBRN%2FLGBB8hMhtkALwYBF4Wcv10GLZImVg4yVpwAB5PLMYPk7qAxuhWgKCyLyRFPHidxsTd2xt7UsmR7HJaz4dDLvvjVkToKkZOfD4%2BmuIlvJgJZtYwc3e4dMr1dbAjFn68Abyg58CAf9od5ty3eGodF1SXbY3POku20a%2FHOIH4uRbUC6GrZ9TyiFOXvCC6RoduZ9f3%2FJ4l8A5XIyGUfVTvmITiC0xF%2FkBXyrpXLTtUcHEld31%2B8k3YgDqndP%2FZ0AS%2FZToRkVW2rKgBENHQ7S5EL95ujbkuyfWTodv73e5ENQbVjSRAnQB55ZN0%2FiKTbaZe4eo86W0KLdwa%2FsFrIG43QxGGyIjKpFZLtQ3Jz0vAQwlwjcgivm8YAS7ZT%2BJizPJaa%2BtyjiMOX98nUTelcYhI5%2FDLDZ24MrixV870lvgh2czLwLA4WhpuMS74IXV71zIes1WLBEQP81BplF0I4c3fyHHW6gJOmQee%2BvQkRY69DpJuQX2GkQk6OBvmwHqfqaNdUDrVYdVZEAheiB6GL0vYFJverqFvxCFnbdmYhNixcCA87dTe5WAQdjXLO%2FURHW44iZNhN6QoTqO%2Bo0xW8eGdkVqzfYAoHmq6yKs8SAmkVhdh%2Fvsn9qqp2PQWfZSyhuOUopVt%2BvTyexNsXIqS3Gyix19%2BnRKImk67QDalaT94f8Py2QB%2Fseu95JGIIZe4JJ5jazaJu%2BRn4j6QozxuDhhx%2FftYvwPj2JmUHxzd1Na0iyjs9bhI59jz%2FOev7tVZm4rBz3VKEAeSoVVxwebUY3fJ7AOlmZaEDTQszq5l%2BDVFX8WXNuUtF7ggHmupmapngQCRkUphzHPHjuzEZeAmf9DAHxmM389hpjx%2Ff7ui%2BXHYL4bPE1Z1hy4h8%2FH3s9637vtadu%2FEnSiNuskvHWNFrg5TLq1mzzAFRnC86h4QQdCsAVm3qmcvaNXJm7LR2AsbFx%2B2eeryI2GuAuqpu0p27LHMvE%2F78ZVAzcjmXPYPpyHvMZQOhgSoBLNkKeapWzUiD8eV%2FHNyrnLuHfBhz2R2OcMF00Kerqk4b4IcvHc8SCw2oallwInFyeTnrzfaPRczym3z0gfx57gcVsQRrZapTljf6jbNCruPrzTbYF6yqlQt7iGyPH9a6%2Bf55FmGd%2B4MifC07XPRY6P3RpyvJMZfLP0FF9avFa%2BnHwSkTNv18Flcd2EcOPphJDpjqsASRRZjaE03OCKARM4iDPSqqp26OcyPg6Rkw1BZMcMDEAdEkjxRgwgdRhGOZw4F7HCwo8ALXHHhmOjE6lgs2KFUSqRLiJkpdVRzsV1A8fSNJEwrh8kRN2LSpdqTp6BQYntUyyiprH5O9hAV8bIdagEoy4R4OoHe2BRO3j7HgA00UdBglb1Xp1B9klSp3guzpG4MmZQk4XS69YEwZnwmAb%2FyZBWD8hAZQmwN720WGmZxzqlKGrU4%2FJiF55kYKDlUxOk3kfoRmix5k7%2BjqOQENSSZLIb1dI73RBp27Xlpf4ZkbSZx94EmjRI0jYg9Gvw15NvNHVLmOVv1i0JHe6JlasRAqL%2Bic0k%2Fqxpik0C%2FJITXbji%2FxTdlCq8pUiZtrX7%2Bd3MGf4Q1ss1in0w1zoi3FUHnBKTujpGZdqLHzC7nVbu1v6F79Dj%2FQTatKVNU01D0Fpp%2Fx5%2F8plHqKjBZ0pDf%2BgNHku7UnZKv2hrfczWABpGxc13IeiRMs3k7EJmVtKKW0ODs38c%2FJndoLvF%2B%2FnSHDKNoNUFeCiF1PXuf0YsPTtv2te4O2ltRaMKUaYIAaHBwQ75Ccp9Pre6TU5aUNbC3Z8fqpv%2BjsBfRHpdaaOKiLi7MTS3kEePqk%2FdUCMJZKfZd6mh8XFMZvMTBova%2B%2FvnFeq7kQt2Q7sZuWjdbg6zVxdr3tdV0hEcwfmvT%2Fx%2FUWap8WyOTrr9fT%2FKSQ4L0MLBijZZNd0tSYMeqBwYDsyguIX5oFcy99dXN%2B8MX1MaC7zV2A8bjA3Hn9JcaKwFCBRWt3vn%2FdmR9egfVGoBtNXcq3L7CfO8H8gUmwYMH8Dky%2FKfD%2FIro729uOWJ7s%2F8K%2Fng3mb%2B%2FWW5ZvWs%2BdwCi9RC%2FQSbB4CR5ViEcs993d%2BQGs7Mz2XYigvR3M34A5qbW8A%2FS3wnbuBPZTOmulU%2FU8%2FwbGQdDfTETEzvxwdeXK7vxwBRGxWd7SG9O8r57m3zXppGpZAuOM7dy5CsxtZQmMCDAcoK6pFUfraX7ZmHYX511tN23%2FcpWOcjqLI7ZyZXe2R5WKuz2jtNb1Zh3QLwPjFVig64Dhz9fmBeDcUXju1HXpzI%2BRlSuvkrvY9yso3rVy5XMFxaJ1jn30l9%2Bd7W9054ebv58N9rYLAg%3D%3D' title='距离百年老店也就差不到一百年~'> \      <div style ='font-size: 13px; font-weight: bold'> \      本站居然运行了${time[1]}天${time[2]}小时${time[3]}分${time[4]}秒  \        <i id="heartbeat" class='fas fa-heartbeat' style='color:red'> </i> \      </div>`;     document.getElementById("workboard").innerHTML = currentTimeHtml;  }, 1000);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/hexo_githubcalendar.js"/>
      <url>/js/hexo_githubcalendar.js</url>
      
        <content type="html"><![CDATA[function GithubCalendar(git_githubapiurl,git_color,git_user){    if(document.getElementById('github_container')){        var github_canlendar = (git_user,git_githubapiurl, git_color) => {            var git_fixed = 'fixed';            var git_px = 'px';            var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];            var git_monthchange = [];            var git_oneyearbeforeday = '';            var git_thisday = '';            var git_amonthago = '';            var git_aweekago = '';            var git_weekdatacore = 0;            var git_datacore = 0;            var git_total = 0;            var git_datadate = '';            var git_git_data = [];            var git_positionplusdata = [];            var git_firstweek = [];            var git_lastweek = [];            var git_beforeweek = [];            var git_thisweekdatacore = 0;            var git_mounthbeforeday = 0;            var git_mounthfirstindex = 0;            var git_crispedges = 'crispedges';            var git_thisdayindex = 0;            var git_amonthagoindex = 0;            var git_amonthagoweek = [];            var git_firstdate = [];            var git_first2date = [];            var git_montharrbefore = [];            var git_monthindex = 0;                        var retinaCanvas = (canvas, context, ratio) => {                if (ratio > 1) {                    var canvasWidth = canvas.width;                    var canvasHeight = canvas.height;                     canvas.width = canvasWidth * ratio;                     canvas.height = canvasHeight * ratio;                     canvas.style.width = '100%';                     canvas.style.height = canvasHeight + 'px';                     context.scale(ratio, ratio);                    }                }            var responsiveChart = () => {        if(document.getElementById("gitcanvas")){        var git_tooltip_container = document.getElementById('git_tooltip_container');        var ratio = window.devicePixelRatio || 1        var git_x = '';        var git_y = '';        var git_span1 = '';        var git_span2 = '';        var github_calendar_c = document.getElementById("gitcanvas");        github_calendar_c.style.width ='100%';        github_calendar_c.style.height ='';        var cmessage = document.getElementById("gitmessage");        var github_calendar_ctx = github_calendar_c.getContext("2d");        width = github_calendar_c.width = document.getElementById("gitcalendarcanvasbox").offsetWidth;        height = github_calendar_c.height = 9 * 0.96 * github_calendar_c.width / git_data.length;        retinaCanvas(github_calendar_c, github_calendar_ctx, ratio)        var linemaxwitdh = height / 9;        var lineminwitdh = 0.8 * linemaxwitdh;        var setposition = {x: 0.02 * width, y: 0.025 * width};        for (var week in git_data) {          weekdata = git_data[week];          for (var day in weekdata) {            var dataitem = {date: "", count: "", x: 0, y: 0};            git_positionplusdata.push(dataitem);            github_calendar_ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);            setposition.y = Math.round(setposition.y * 100) / 100;            dataitem.date = weekdata[day].date;            dataitem.count = weekdata[day].count;            dataitem.x = setposition.x;            dataitem.y = setposition.y;            github_calendar_ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);            setposition.y = setposition.y + linemaxwitdh          }          setposition.y = 0.025 * width;          setposition.x = setposition.x + linemaxwitdh;        }        if (document.body.clientWidth > 700) {          github_calendar_ctx.font = "600  Arial";          github_calendar_ctx.fillStyle = '#aaa';          github_calendar_ctx.fillText("日", 0, 1.9 * linemaxwitdh);          github_calendar_ctx.fillText("二", 0, 3.9 * linemaxwitdh);          github_calendar_ctx.fillText("四", 0, 5.9 * linemaxwitdh);          github_calendar_ctx.fillText("六", 0, 7.9 * linemaxwitdh);          var monthindexlist = github_calendar_c.width / 24;          for (var index in git_monthchange) {            github_calendar_ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);            monthindexlist = monthindexlist + github_calendar_c.width / 12          }        }        github_calendar_c.onmousemove = function (event) {          if (document.querySelector('.gitmessage')) {            git_tooltip_container.innerHTML = ""          }          getMousePos(github_calendar_c, event)        };        git_tooltip_container.onmousemove = function (event) {          if (document.querySelector('.gitmessage')) {            git_tooltip_container.innerHTML = ""          }        };        var getMousePos = (canvas, event) => {          var rect = canvas.getBoundingClientRect();          var x = event.clientX - rect.left * (canvas.width / rect.width);          var y = event.clientY - rect.top * (canvas.height / rect.height);          for (var item of git_positionplusdata) {            var lenthx = x - item.x;            var lenthy = y - item.y;            if (0 < lenthx && lenthx < lineminwitdh) {              if (0 < lenthy && lenthy < lineminwitdh) {                git_span1 = item.date;                git_span2 = item.count;                git_x = event.clientX - 100;                git_y = event.clientY - 60;                html = tooltip_html(git_x, git_y, git_span1, git_span2);                append_div_gitcalendar(git_tooltip_container, html)              }            }          }        }      }}            var addlastmonth = () => {                if (git_thisdayindex === 0) {                    thisweekcore(52);                    thisweekcore(51);                    thisweekcore(50);                    thisweekcore(49);                    thisweekcore(48);                    git_thisweekdatacore += git_firstdate[6].count;                    git_amonthago = git_firstdate[6].date                } else {                    thisweekcore(52);                    thisweekcore(51);                    thisweekcore(50);                    thisweekcore(49);                    thisweek2core();                    git_amonthago = git_first2date[git_thisdayindex - 1].date                }            }            var thisweek2core = () => {                for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {                    git_thisweekdatacore += git_first2date[i].count                }            }            var thisweekcore = (index)  => {                for (var item of git_data[index]) {                    git_thisweekdatacore += item.count                }            }            var addlastweek = () => {                for (var item of git_lastweek) {                    git_weekdatacore += item.count                }            }            var addbeforeweek = () => {                for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {                    git_weekdatacore += git_beforeweek[i].count                }            }            var addweek = (data) => {                if (git_thisdayindex === 6) {                    git_aweekago = git_lastweek[0].date;                    addlastweek()                } else {                    lastweek = data.contributions[51];                    git_aweekago = lastweek[git_thisdayindex + 1].date;                    addlastweek();                    addbeforeweek()                }            }            fetch(git_githubapiurl).then(data => data.json()).then(data => {                if(document.getElementById('github_loading')){                    document.getElementById('github_loading').remove()};                git_data = data.contributions;                git_total = data.total;                git_first2date = git_data[48];                git_firstdate = git_data[47];                git_firstweek = data.contributions[0];                git_lastweek = data.contributions[52];                git_beforeweek = data.contributions[51];                git_thisdayindex = git_lastweek.length - 1;                git_thisday = git_lastweek[git_thisdayindex].date;                git_oneyearbeforeday = git_firstweek[0].date;                git_monthindex = git_thisday.substring(5, 7) * 1;                git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);                git_monthchange = git_montharrbefore.concat(git_month);                addweek(data);                addlastmonth();                var html = github_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);                append_div_gitcalendar(github_container, html);                responsiveChart()            }).catch(function (error) {                console.log(error)            });            window.onresize = function () {                responsiveChart()            };            window.onscroll = function () {                if (document.querySelector('.gitmessage')) {                    git_tooltip_container.innerHTML = ""                }            };            var git_thiscolor = (color, x) => {                if (x === 0) {                    var i = parseInt(x / 2);                    return color[0]                } else if (x < 2) {                    return color[1]                } else if (x < 20) {                    var i = parseInt(x / 2);                    return color[i]                } else {                    return color[9]                }            };            var tooltip_html = (x, y, span1, span2) => {                var html = '';                html += '<div class="gitmessage" style="top:' + y + 'px;left:' + x + 'px;position: fixed;z-index:9999"><div class="angle-wrapper" style="display:block;"><span>' + span1 + '&nbsp;</span><span>' + span2 + ' 次上传</span></div></div>';                return html            };            var github_canvas_box = () => {                var html = '<div id="gitcalendarcanvasbox"> <canvas id="gitcanvas" style="animation: none;"></canvas></div>';                return html            };            var github_info_box = (user, color) => {                var html = '';                html += '<div id="git_tooltip_container"></div><div class="contrib-footer clearfix mt-1 mx-3 px-3 pb-1"><div class="float-left text-gray">数据来源 <a href="https://github.com/' + user + '" target="blank">@' + user + '</a></div><div class="contrib-legend text-gray">Less <ul class="legend"><li style="background-color:' + color[0] + '"></li><li style="background-color:' + color[2] + '"></li><li style="background-color:' + color[4] + '"></li><li style="background-color:' + color[6] + '"></li><li style="background-color:' + color[8] + '"></li></ul>More </div></div>';                return html            };            var github_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {                var html = '';                var canvasbox = github_canvas_box();                var infobox = github_info_box(user, color);                var style = github_main_style();                html += '<div class="position-relative"><div class="border py-2 graph-before-activity-overview"><div class="js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center">' + canvasbox + '</div>' + infobox + '</div></div>';                html += '<div style="display:flex;width:100%"><div class="contrib-column contrib-column-first table-column"><span class="text-muted">过去一年提交</span><span class="contrib-number">' + total + '</span><span class="text-muted">' + oneyearbeforeday + '&nbsp;-&nbsp;' + thisday + '</span></div><div class="contrib-column table-column"><span class="text-muted">最近一月提交</span><span class="contrib-number">' + thisweekdatacore + '</span><span class="text-muted">' + amonthago + '&nbsp;-&nbsp;' + thisday + '</span></div><div class="contrib-column table-column"><span class="text-muted">最近一周提交</span><span class="contrib-number">' + weekdatacore + '</span><span class="text-muted">' + aweekago + '&nbsp;-&nbsp;' + thisday + '</span></div></div>' + style;                return html            };            var github_main_style = () => {                style = '<style>#github_container{text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;}.gitcalendar-graph text.wday,.gitcalendar-graph text.month{font-size:10px;fill:#aaa;}.contrib-legend{text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;}.contrib-legend .legend{display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;}.contrib-legend .legend li{display:inline-block;width:10px;height:10px;}.text-small{font-size:12px;color:#767676;}.gitcalendar-graph{padding:15px 0 0;text-align:center;}.contrib-column{text-align:center;border-top:1px dashed #818181;font-size:11px;}.contrib-column-first{border-left:0;}.table-column{padding:10px;display:table-cell;flex:1;vertical-align:top;}.contrib-number{font-weight:300;line-height:1.3em;font-size:24px;display:block;}.gitcalendar img.spinner{width:70px;margin-top:50px;min-height:70px;}.monospace{text-align:center;color:#000;font-family:monospace;}.monospace a{color:#1D75AB;text-decoration:none;}.contrib-footer{font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;}.left.text-muted{float:left;margin-left:9px;color:#767676;}.left.text-muted a{color:#4078c0;text-decoration:none;}.left.text-muted a:hover,.monospace a:hover{text-decoration:underline;}h2.f4.text-normal.mb-3{display:none;}.float-left.text-gray{float:left;}#user-activity-overview{display:none;}.day-tooltip{white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;}.day-tooltip strong{color:#dfe2e5;}.day-tooltip.is-visible{display:block;}.day-tooltip:after{position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:" ";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)}.position-relative{width:100%;}@media screen and (max-width:650px){.contrib-column{display:none}}.angle-wrapper{z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;}.angle-box{position:fixed;padding:10px}.angle-wrapper span{padding-bottom:1em;}.angle-wrapper:before{content:"";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;}</style>';                return style            }        };        var append_div_gitcalendar = (parent, text) => {            if (typeof text === 'string') {                var temp = document.createElement('div');                temp.innerHTML = text;                var frag = document.createDocumentFragment();                while (temp.firstChild) {                    frag.appendChild(temp.firstChild)                }                parent.appendChild(frag)            } else {                parent.appendChild(text)            }        };        var github_container = document.getElementById('github_container');        var github_loading = document.getElementById('github_loading');        github_canlendar(git_user,git_githubapiurl, git_color)}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
